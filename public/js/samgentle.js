// Generated by CoffeeScript 1.12.5
(function() {
  var $, $$, canvas, circle, draw, drawing, el, i, len, locale, ref, ref1, startDrawing, stopDrawing;

  drawing = false;

  stopDrawing = function() {
    drawing = false;
  };

  startDrawing = function(ev) {
    ev.preventDefault();
    drawing = true;
    return draw(ev);
  };

  draw = function(ev) {
    var ctx, i, left, len, ref, results, top, touch, x, y;
    if (drawing) {
      ev.preventDefault();
      ctx = ev.target.getContext('2d');
      left = ev.target.offsetLeft;
      top = ev.target.offsetTop;
      ref = ev.touches || [ev];
      results = [];
      for (i = 0, len = ref.length; i < len; i++) {
        touch = ref[i];
        x = touch.offsetX;
        y = touch.offsetY;
        circle(ctx, x, y, 'RGBA(255,255,255,1)');
        results.push(window.setTimeout(function() {
          ctx.globalCompositeOperation = 'copy';
          circle(ctx, x, y, 'RGBA(255,255,255,0)');
          return ctx.globalCompositeOperation = 'source-over';
        }, 2000));
      }
      return results;
    }
  };

  circle = function(ctx, x, y, colour) {
    ctx.save();
    ctx.beginPath();
    ctx.arc(x, y, 15, 0, Math.PI * 2, true);
    ctx.closePath();
    ctx.clip();
    ctx.fillStyle = colour;
    ctx.fill();
    return ctx.restore();
  };

  $ = document.querySelector.bind(document);

  $$ = document.querySelectorAll.bind(document);

  canvas = $('#dnecanvas');

  canvas.addEventListener('mousedown', startDrawing);

  canvas.addEventListener('touchstart', startDrawing);

  canvas.addEventListener('mousemove', draw);

  canvas.addEventListener('touchmove', draw);

  canvas.addEventListener('mouseup', stopDrawing);

  canvas.addEventListener('touchend', stopDrawing);

  locale = (ref = navigator.languages) != null ? ref[0] : void 0;

  ref1 = $$('time');
  for (i = 0, len = ref1.length; i < len; i++) {
    el = ref1[i];
    el.textContent = new Date(el.getAttribute('datetime')).toLocaleDateString(locale, {
      timeZone: 'UTC'
    });
  }

}).call(this);
